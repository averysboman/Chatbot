package chatbot.view;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import chatbot.controller.ChatbotAppController;

import javax.swing.*;

import java.awt.Font;

public class ChatbotPanel extends JPanel
{
	private ChatbotAppController baseController;
	
	/**
	 * Initializes the sampleButton.
	 */
	private JButton sampleButton;
	/**
	 * Initializes the sampleField.
	 */
	private JTextField sampleField;
	/**
	 * Initializes the chatPane.
	 */
	private JScrollPane chatPane;
	/**
	 * Initializes the chatArea.
	 */
	private JTextArea chatArea;
	/**
	 * Initializes the baseLayout for the ChatbotPanel. 
	 */
	private SpringLayout baseLayout;
	/**
	 * Initializes the randomButton.
	 */
	private JButton randomButton;
	
	/**
	 * The ChatbotPanel constructor.
	 * @param baseController
	 */
	public ChatbotPanel(ChatbotAppController baseController)
	{
		this.baseController = baseController;
		sampleButton = new JButton("Click Here");
		chatArea = new JTextArea(5,25);
		chatArea.setBackground(Color.WHITE);
		chatPane = new JScrollPane();
		randomButton = new JButton("Random");
		
		sampleField = new JTextField(25);
		sampleField.setFont(new Font("Courier New", Font.PLAIN, 12));
		sampleField.setBackground(Color.WHITE);
		
		baseLayout = new SpringLayout();
		baseLayout.putConstraint(SpringLayout.NORTH, randomButton, 0, SpringLayout.NORTH, sampleButton);
		baseLayout.putConstraint(SpringLayout.EAST, randomButton, 0, SpringLayout.EAST, sampleField);
		baseLayout.putConstraint(SpringLayout.NORTH, sampleButton, 22, SpringLayout.SOUTH, sampleField);
		baseLayout.putConstraint(SpringLayout.WEST, sampleButton, 0, SpringLayout.WEST, sampleField);
		
		
		setupScrollPane();
		setupPanel();
		setupLayout();
		setupListeners();
	}
	
	/**
	 * Sets up the ability for scrolling within the Panel.
	 */
	private void setupScrollPane()
	{
		chatArea.setLineWrap(true);
		chatArea.setWrapStyleWord(true);
	}
	
	/**
	 * Sets up the basic look for the Panel.
	 */
	private void setupPanel()
	{
		this.setBackground(Color.RED);
		this.setLayout(baseLayout);
		
		this.add(sampleButton);
		this.add(sampleField);
		this.add(chatPane);
	}
	
	/**
	 * Dumping grounds for autogenerated code. Contains the exact locations of items within the Panel.
	 */
	private void setupLayout()
	{
		randomButton.addActionListener(new ActionListener(){
		public void actionPerformed(ActionEvent arg0){
		}
		});
		add(randomButton);
		chatArea = new JTextArea(5,25);
		chatArea.setLineWrap(true);
		chatArea.setWrapStyleWord(true);
		baseLayout.putConstraint(SpringLayout.NORTH, sampleField, 22, SpringLayout.SOUTH, chatArea);
		baseLayout.putConstraint(SpringLayout.WEST, sampleField, 0, SpringLayout.WEST, chatArea);
		baseLayout.putConstraint(SpringLayout.EAST, sampleField, 0, SpringLayout.EAST, chatArea);
		baseLayout.putConstraint(SpringLayout.EAST, chatArea, -111, SpringLayout.EAST, this);
		baseLayout.putConstraint(SpringLayout.NORTH, chatArea, 49, SpringLayout.NORTH, this);
		baseLayout.putConstraint(SpringLayout.WEST, chatArea, 100, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.SOUTH, chatArea, -112, SpringLayout.SOUTH, this);
		add(chatArea);
		chatArea.setBackground(Color.WHITE);

		
	}
	
	/**
	 * Sets up the listeners for the Panel.
	 */
	private void setupListeners()
	{
		sampleButton.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent click)
			{
				String userTypedText = sampleField.getText();
				String chatbotResponse = baseController.sendTextToChatbot(userTypedText);
				displayTextToUser(userTypedText);
				displayTextToUser(chatbotResponse);
				sampleField.setText("");
			}
		});
		
		/**
		 * Adds specific actions to be launched once the randomButton is clicked.
		 */
		randomButton.addActionListener(new ActionListener()
		{
			int i = 0;
			public void actionPerformed(ActionEvent click)
			{
				i++;
				if(i == 1)
				{
					chatArea.append("\nYou just burned down an orphanage in Uganda by clicking that button.");
				}
				else if(i == 2)
				{
					chatArea.append("\nYou clicked it again? Wow. Three million kittens just died. How could you?");
				}
				else if(i == 3)
				{
					chatArea.append("\nYou're a sick, evil person. That old folks' home didn't deserve to be bombed. I'm done with you.");
				}
				else if(i == 4)
				{
					baseController.getBaseFrame().dispose();
				}
			}
		});
	}
	
	/**
	 * Displays certain text to the user.
	 * @param input
	 */
	public void displayTextToUser(String input)
	{
		chatArea.append("\n" + input);
	}
}